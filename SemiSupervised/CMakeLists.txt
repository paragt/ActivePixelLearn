CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
project (SemiSupervised)

# IF(NOT CMAKE_BUILD_TYPE)
#     SET (CMAKE_BUILD_TYPE Release)
# ENDIF(NOT CMAKE_BUILD_TYPE)
# 
# SET(CMAKE_CXX_FLAGS_RELEASE "-O3 -w")
# SET(CMAKE_CXX_FLAGS_DEBUG "-ggdb -w")
# SET(CMAKE_CXX_LINK_FLAGS "-O3")
# SET(CMAKE_DEBUG_POSTFIX "-g")

# include_directories (/groups/scheffer/home/paragt/NeuroProof_sparse/SparseSolve/sparse-install/include)
include_directories (/groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/include)

# link_directories (/groups/scheffer/home/paragt/NeuroProof_sparse/SparseSolve/sparse-install/lib/) 
# set (SUITESPARSEDIR /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib )
set (SOURCES kmeans.cpp weightmatrix_iter.cpp)
add_library (SemiSupervised SHARED ${SOURCES})

# link_directories (/groups/scheffer/home/paragt/NeuroProof_sparse/SparseSolve/sparse-install/lib/) 

# add_library(blas SHARED IMPORTED)
# set_property(TARGET blas PROPERTY IMPORTED_LOCATION /usr/lib64/libblas.so.3)
# add_library(gfortran SHARED IMPORTED)
# set_property(TARGET gfortran PROPERTY IMPORTED_LOCATION /usr/lib64/libgfortran.so.3)
# add_library(lapack SHARED IMPORTED)
# set_property(TARGET lapack PROPERTY IMPORTED_LOCATION /usr/lib64/liblapack.so.3)
# add_library(m SHARED IMPORTED)
# set_property(TARGET m PROPERTY IMPORTED_LOCATION /usr/lib64/libm.so)
# add_library(rt SHARED IMPORTED)
# set_property(TARGET rt PROPERTY IMPORTED_LOCATION /usr/lib64/librt.so)
# 
# add_library(amd STATIC IMPORTED)
# set_property(TARGET amd PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libamd.a)
# add_library(camd STATIC IMPORTED)
# set_property(TARGET camd PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libcamd.a)
# add_library(colamd STATIC IMPORTED)
# set_property(TARGET colamd PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libcolamd.a)
# add_library(ccolamd STATIC IMPORTED)
# set_property(TARGET ccolamd PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libccolamd.a)
# add_library(cholmod STATIC IMPORTED)
# set_property(TARGET cholmod PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libcholmod.a)
# add_library(btf STATIC IMPORTED)
# set_property(TARGET btf PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libbtf.a)
# add_library(klu STATIC IMPORTED)
# set_property(TARGET klu PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libklu.a)
# add_library(ldl STATIC IMPORTED)
# set_property(TARGET ldl PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libldl.a)
# add_library(rbio STATIC IMPORTED)
# set_property(TARGET rbio PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/librbio.a)
# add_library(spqr STATIC IMPORTED)
# set_property(TARGET spqr PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libspqr.a)
# add_library(umfpack STATIC IMPORTED)
# set_property(TARGET umfpack PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libumfpack.a)
# add_library(metis STATIC IMPORTED)
# set_property(TARGET metis PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libmetis.a)
# add_library(suitesparseconfig STATIC IMPORTED)
# set_property(TARGET suitesparseconfig PROPERTY IMPORTED_LOCATION  /groups/flyem/proj/cluster/toufiq/SuiteSparse/sparse-install/lib/libsuitesparseconfig.a)


# target_link_libraries (SemiSupervised cholmod colamd suitesparseconfig amd btf ccolamd camd klu ldl rbio spqr umfpack metis lapack blas gfortran m rt)

# if (NOT BUILDEM_DIR STREQUAL "None")
#     add_dependencies (SemiSupervised ${boost_NAME} ${vigra_NAME})
# endif()
# 
#add_executable (stack_test stack_test.cpp)
#add_dependencies (stack_test ${vigra_NAME} ${boost_NAME} ${hdf5_LIBRARIES})
#target_link_libraries (stack_test ${vigra_LIB} ${boost_LIBS} ${hdf5_LIBRARIES}  ${PYTHON_LIBRARY_FILE} Stack)

